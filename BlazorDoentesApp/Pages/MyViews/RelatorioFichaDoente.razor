@page "/RelatorioFichaDoente"
@using Models.CustomModels
@using BlazorDoentesApp.Services;
@using Models
@inject IDoenteService doenteService;
@inject IConsultasService consultasService;
@inject IJSRuntime JSRuntime;

<h5>Ficha do Doente</h5>
<br />
<br />
<h7>Pesquisar Doente</h7>
<br />
<input type="number" @bind-value="@searchTerm" />
<input type="button" value="Search" @onclick="@Pesquisar"/>
<br />
<br />
<br />
@*Esconder e mostrar no browser*@
@if (hide == false)
{
    <h5>Perfil do Doente</h5>
    <div class="container">
    <table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>Id</th>
            <th>Nome</th>
            <th>Data de Nascimento</th>
            <th>Sexo</th>    
        </tr>
    </thead>
    <tbody>
         <tr>
                <td>
                    @doentePesquisado.Id
                </td>
                <td>
                    @doentePesquisado.Nome
                </td>
                <td>
                    @doentePesquisado.DataNascimento.ToShortDateString()
                </td>
                <td>
                    @doentePesquisado.Sexo
                </td>
              
                
         </tr>
    </tbody>
</table>
</div>

<br />
<br />

<h5>Registo de consultas do @doentePesquisado.Nome.ToString() </h5>
<div class="container">
<table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>ID Consulta</th>
            <th>Data</th>
            <th>Especialidade</th>
            <th>Id do Doente</th>   
          
        </tr>
    </thead>
    <tbody>
      
        
        @foreach(TbConsulta c in listConsultasDoente.OrderBy(cd=>cd.Data))
        {          
                
        <tr>
                <td>
                    @c.Id.ToString()
                </td>
                <td>
                    @c.Data.ToShortDateString()
                </td>
                <td>  
                    @c.Especialidade
                </td>
                <td>
                    @c.IdDoente
                </td>

        </tr>
                                      
        }
         
    </tbody>
</table>
 </div>   
}




@code {
    private bool hide{ get; set; }
    private int searchTerm;
    private TbDoente doentePesquisado = new TbDoente();
    private List<TbConsulta> listConsultasDoente = new List<TbConsulta>();

    protected override async Task OnInitializedAsync()
    {
        hide = true;
    }

    private async void Pesquisar()
    {
        await GetDoente(searchTerm);
        await GetListConsultasDoente(searchTerm);
        this.StateHasChanged();
    }

    public async Task GetDoente(int _doenteId)
    {
        var response = await doenteService.GetDoente(_doenteId);
        if (response != null)
        {
            if (response.Status == true)
            {
                doentePesquisado = response.Doente;
                hide = false;                
                
            }
            else
            {
                hide = true;
                await Alert(response.Message);
                
            }

        }
    }

    public async Task GetListConsultasDoente(int _doenteId)
    {
        listConsultasDoente = await consultasService.GetConsultasDoente(_doenteId);
    }

    private async Task Alert(String Message)
    {
        await JSRuntime.InvokeAsync<object>("Alert", Message);
    }
    
}
