@page "/Consultas"
@using BlazorDoentesApp.Services;
@using Models
@using Models.CustomModels
@inject IConsultasService consultaService;
@inject IJSRuntime JSRuntime;



<PageTitle>Consultas</PageTitle>

<h5>Adicionar Consulta</h5>

<div class="container">
    <EditForm Model="@consulta">
    <table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>Data</th>
            <th>Especialidade</th>
            <th>IdDoente</th>   
            @*<th></th>  *@ 
        </tr>
    </thead>
    <tbody>
         <tr>
                <td>
                    <InputDate @bind-Value="consulta.Data" class="form-control" ></InputDate>
                </td>
                <td>
                    <select @bind=consulta.Especialidade>
                        <option value="">Selecione uma especialidade</option>
                        <option value="Oftalmologia">Oftalmologia</option>
                        <option value="Ortopedia">Ortopedia</option>
                        <option value="Medicina">Medicina</option>
                    </select>
                    @*<InputText @bind-Value="consulta.Especialidade" class="form-control"></InputText>*@
                </td>
                <td>
                    <InputNumber @bind-Value="consulta.IdDoente" class="form-control"></InputNumber> 
                </td>
                <td>
                    <input type="button" value="Adicionar" @onclick="AddConsulta" />
                </td>
                
         </tr>
    </tbody>
</table>
</EditForm>
</div>



<h5>Lista de consultas</h5>
<div class="container">
<table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>ID Consulta</th>
            <th>Data</th>
            <th>Especialidade</th>
            <th>Id do Doente</th>   
         
           @* <th></th>*@
        </tr>
    </thead>
    <tbody>
      
        
        @foreach(TbConsulta c in listConsultas)
        {          
                
        <tr>
                <td>
                    @c.Id.ToString()
                </td>
                <td>
                    @c.Data.ToShortDateString()
                    @*<input @bind="c.Data" type="date">*@
                </td>
                <td>  
                    @c.Especialidade
                  @*  <input @bind="c.Especialidade">*@
                </td>
                <td>
                    @c.IdDoente
                    @*<input @bind="c.IdDoente" type="number">*@
                </td>
               @* <td>
                    <input type="button" class="btn btn-primary" value="Update" @onclick="(() => UpdateConsulta(c))" />
               </td>*@
                @*<td>
                    <input type="button" class="btn btn-primary" value="Delete" @onclick="(() => DeleteConsulta(c.Id))" />
                </td>*@
        </tr>
                                      
        }
         
    </tbody>
</table>
 </div>   

@code{

    private TbConsulta consulta = new TbConsulta();
    private List<TbConsulta> listConsultas = new List<TbConsulta>();

    private async Task GetConsultas()
    {

        listConsultas = await consultaService.GetConsultas();
    }

    public async void AddConsulta()
    {
        
        var response = await consultaService.AddConsulta(consulta);
        if (response != null)
        {
            await GetConsultas();
            if (response.Status == true)
            {
                await Alert("Consulta adicionado com sucesso!!");
            }
            else
            {
                await Alert(response.Message);
            }
            this.StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await GetConsultas();
    }

    //public async void UpdateConsulta(TbConsulta _consulta)
    //{
    //    var response = await consultaService.UpdateConsulta(_consulta);
    //    if (response != null)
    //    {
    //        await GetConsultas();
    //        await Alert("Consulta atualizado com sucesso!!");
    //        this.StateHasChanged();
    //    }
    //}

    //public async void DeleteConsulta(int _consultaId)
    //{
    //    var response = await consultaService.DeleteConsulta(_consultaId);
    //    if (response != null)
    //    {
    //        await GetConsultas();
    //        await Alert("Consulta elimindado com sucesso!!");
    //        this.StateHasChanged();
    //    }
    //}

    private async Task Alert(String Message)
    {
        await JSRuntime.InvokeAsync<object>("Alert", Message);
    }
}