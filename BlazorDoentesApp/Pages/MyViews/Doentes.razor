@page "/Doentes"
@using BlazorDoentesApp.Services;
@using Models
@inject IDoenteService empService;
@inject IJSRuntime JSRuntime;



<PageTitle>Doentes</PageTitle>

<h5>Adicionar Doente</h5>

<div class="container">
    <EditForm Model="@doente">
    <table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Data de Nascimento</th>
            <th>Sexo</th>   
            <th></th>   
        </tr>
    </thead>
    <tbody>
         <tr>
                <td>
                    <InputText @bind-Value="doente.Nome" class="form-control" ></InputText>
                </td>
                <td>
                    <InputDate @bind-Value="doente.DataNascimento" class="form-control" ></InputDate>
                </td>
                <td>
                    <InputText @bind-Value="doente.Sexo" class="form-control"></InputText> 
                </td>
                <td>
                    <input type="button" value="Adicionar" @onclick="AddDoente" />
                </td>
                
         </tr>
    </tbody>
</table>
</EditForm>
</div>



<h5>Lista de doentes</h5>
<div class="container">
<table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nome</th>
            <th>Data de Nascimento</th>
            <th>Sexo</th>   
            <th></th>
           @* <th></th>*@
        </tr>
    </thead>
    <tbody>
      
        
        @foreach(TbDoente d in listDoentes)
        {          
                
        <tr>
                <td>
                    @d.Id.ToString()
                </td>
                <td>
                    <input @bind="d.Nome">
                </td>
                <td>
                    <input @bind="d.DataNascimento" type="date">
                </td>
                <td>
                    <input @bind="d.Sexo">
                </td>
                <td>
                    <input type="button" class="btn btn-primary" value="Update" @onclick="(() => UpdateDoente(d))" />
               </td>
               @* <td>
                    <input type="button" class="btn btn-primary" value="Delete" @onclick="(() => DeleteDoente(d.Id))" />
                </td>*@
        </tr>
                                      
        }
         
    </tbody>
</table>
 </div>   

@code{

    private TbDoente doente = new TbDoente();
    private List<TbDoente> listDoentes = new List<TbDoente>();

    
    private async Task GetDoentes()
    {
        listDoentes = await empService.GetDoentes();
    }

    public async void AddDoente()
    {
        var response = await empService.AddDoente(doente);
        if (response != null)
        {
            await GetDoentes();
            if (response.Status == true)
            {
                await Alert("Doente adicionado com sucesso!!");
            }
            else
            {
                await Alert(response.Message);
            }
            this.StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await GetDoentes();
    }

    public async void UpdateDoente(TbDoente _doente)
    {
        var response = await empService.UpdateDoente(_doente);
        if (response != null)
        {
            await GetDoentes();
            await Alert("Doente atualizado com sucesso!!");
            this.StateHasChanged();
        }
    }

    //public async void DeleteDoente(int _doenteId)
    //{
    //    var response = await empService.DeleteDoente(_doenteId);
    //    if (response != null)
    //    {
    //        await GetDoentes();
    //        await Alert("Doente elimindado com sucesso!!");
    //        this.StateHasChanged();
    //    }
    //}

    private async Task Alert(String Message)
    {
        await JSRuntime.InvokeAsync<object>("Alert", Message);
    }
}